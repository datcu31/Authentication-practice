{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Authentication-project\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nconst calculateRemaningTime = expirationTime => {\n  const curentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remaningDuration = adjExpirationTime - curentTime;\n  return remaningDuration;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExoirationDate = localStorage.getItem('epirationTime');\n  const remaningTime = calculateRemaningTime(storedExoirationDate);\n  if (remaningTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTIme');\n    return null;\n  }\n  ;\n  return {\n    token: storedToken,\n    duration: remaningTime\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  ;\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    const remaningTime = calculateRemaningTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remaningTime);\n  };\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemaningTime","expirationTime","curentTime","Date","getTime","adjExpirationTime","remaningDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExoirationDate","remaningTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"sources":["C:/React/Authentication-project/src/store/auth-context.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => { },\r\n    logout: () => { },\r\n});\r\n\r\nconst calculateRemaningTime = (expirationTime) => {\r\n    const curentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remaningDuration = adjExpirationTime - curentTime;\r\n\r\n    return remaningDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExoirationDate = localStorage.getItem('epirationTime');\r\n\r\n    const remaningTime = calculateRemaningTime(storedExoirationDate);\r\n\r\n    if (remaningTime <= 60000) {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTIme');\r\n        return null;\r\n    };\r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remaningTime,\r\n    };\r\n\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    if (tokenData) {\r\n        initialToken = tokenData.token;\r\n    };\r\n\r\n    const [token, setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = () => {\r\n        setToken(null);\r\n        localStorage.removeItem('token');\r\n\r\n        if (logoutTimer) {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    };\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('expirationTime', expirationTime);\r\n\r\n        const remaningTime = calculateRemaningTime(expirationTime)\r\n\r\n        logoutTimer = setTimeout(logoutHandler, remaningTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            console.log(tokenData.duration);\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData])\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler,\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}